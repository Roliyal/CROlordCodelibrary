这是vue.config.js
// front-guess/vue.config.js

module.exports = {
  devServer: {
    proxy: {
      '/login': {
        target: 'http://8.217.105.200:80',
        changeOrigin: true,
      },
      '/register': {
        target: 'http://8.217.105.200:8083',
        changeOrigin: true,
      },
    },
  },
}

这是app.vue
<script>
import store from "./store";

export default {
  name: "App",
  computed: {
    store() {
      return store;
    },
  },
  methods: {
    logout() {
      store.setIsLoggedIn(false); // Update this line
      this.$router.push("/login");
    },
  },
};
</script>

这是auth-api.js
import axios from "axios";



export default {
    isAuthenticated: false,

    async authenticate(username, password) {
        try {
            const response = await axios.post("http://localhost:8083/login", { // 更新这一行
                username,
                password,
            });
            console.log("Response data:", response.data); // 添加这

            if (response.data && response.data.authToken) {
                this.isAuthenticated = true; // 添加这一行

                return {
                    authToken: response.data.authToken,
                    id: response.data.id, // 确保这里获取了 userID
                };
            } else {
                return null;
            }
        } catch (error) {
            console.error("Error authenticating:", error);
            return null;
        }
    },
    // 添加 register 函数
    async register(username, password) {
        try {
            const response = await axios.post("http://localhost:8083/register", {
                username,
                password,
            });

            if (response.status === 201) {
                return { status: response.status };
            } else {
                return { status: response.status, error: "注册失败，请重试。" };
            }
        } catch (error) {
            console.error("Error registering:", error);
            return { status: 500, error: "注册失败，请重试。" };
        }
    },
};

这是前端的4个vue文件内容
分别是
GuessNumberComponent.vue
<script>
import axios from "axios";

export default {
  data() {
    return {
      number: null,
      message: null,
      attempts: null,
      gameStatus: "idle",
    };
  },
  methods: {
    async startGame() {
      this.gameStatus = "playing";
      this.message = null;
      this.attempts = null;
    },

    async submitGuess(guess) {
      // 从localStorage中获取authToken
      const authToken = localStorage.getItem("authToken");
      const ID = localStorage.getItem("id"); // 获取存储的userID

      if (!authToken) {
        this.message = "请先登录";
        return;
      }

      try {
        const response = await axios.post("http://localhost:8084/game", {
          number: guess,
        }, {
          headers: {
            Authorization: `Bearer ${authToken}` // 设置请求头
          },
          params: {
            userID: ID, // 添加这一行
          },
        });
        const resData = response.data;
        if (resData.success) {
          alert(resData.message); // 显示提示信息
          this.message = resData.message;
          this.attempts = resData.attempts;
          this.gameStatus = "idle";
        } else {
          this.message = resData.message;
          this.attempts = resData.attempts;
        }
      } catch (error) {
        console.error("Error submitting guess:", error);
        this.gameStatus = "error";
      }
    },
  },
};
</script>

loginComponent.vue
<script>
import authApi from "../auth-api";
import { useRouter } from "vue-router";
import store from "../store";

export default {
  data() {
    return {
      username: "",
      password: "",
      errorMessage: "",
    };
  },
  setup() {
    const router = useRouter();
    return { router };
  },
  methods: {
    async login() {
      const authResult = await authApi.authenticate(this.username, this.password);

      if (authResult && authResult.authToken) {
        store.setIsLoggedIn(true);
        localStorage.setItem("authToken", authResult.authToken);
        localStorage.setItem("id", authResult.id); // 添加这一行

        this.router.push("/game");
      } else {
        this.errorMessage = "登录失败，请检查用户名和密码是否正确。";
      }
    },
  },
};
</script>

registerComponent.vue
script>
import authApi from "../auth-api";
import { useRouter } from "vue-router";

export default {
  data() {
    return {
      username: "",
      password: "",
      errorMessage: "",
      infoMessage: "",
    };
  },
  setup() {
    const router = useRouter();
    return { router };
  },
  methods: {
    async register() {
      const registerResult = await authApi.register(this.username, this.password);

      if (registerResult && registerResult.status === 201) {
        this.errorMessage = "";
        this.infoMessage = "注册成功！正在跳转到登录页面...";
        setTimeout(() => {
          this.router.push("/login");
        }, 2000);
      } else {
        this.errorMessage = "注册失败，请重试。";
      }
    },
  },
};

scoreboardComponent.vue

<script>export default {
  data() {
    return {
      scores: [],
      gameData: [],
      dataFetched: false,
    };
  },

  methods: {
    async fetchScoreboardData() {
      try {
        const response = await fetch("http://localhost:8085/scoreboard");
        if (response.ok) {
          this.gameData = await response.json();
          this.dataFetched = true;
        } else {
          console.error("Error fetching scoreboard data:", response.statusText);
        }
      } catch (error) {
        console.error("Error fetching scoreboard data:", error);
      }
    },

  },
};

</script>
 我需要怎么修改他们的loclahost地址，我期望用一个变量的方式去修改他们