apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: micro-go-login
  template:
    metadata:
      labels:
        app: micro-go-login
    spec:
      # 给 preStop + 应用优雅退出 留足够时间
      terminationGracePeriodSeconds: 45

      containers:
        - name: micro-go-login
          image: registry.ap-southeast-1.aliyuncs.com/micro1/micro-login-test-gary:1.0.145
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083

          env:
            - name: ENV_FILE
              value: "/app/.env.production"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: "login-service"
            - name: SERVICE_PORT
              value: "8083"
            - name: NACOS_SERVER_IP
              value: "mse-95bb82810-nacos-ans.mse.aliyuncs.com"
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: NACOS_CONTEXT_PATH
              value: "/nacos"
            - name: NACOS_NAMESPACE
              value: "public"
            - name: NACOS_GROUP
              value: "DEFAULT_GROUP"
            - name: NACOS_CLUSTER
              value: "DEFAULT"

          volumeMounts:
            - name: app-log
              mountPath: /app/log

          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Load environment file
                    [ -f "${ENV_FILE}" ] && . "${ENV_FILE}"
                    LOG=/app/log/lifecycle.log
                    mkdir -p "$(dirname "$LOG")" || true

                    # 1) Report normal weight
                    echo "$(date +'%F %T') postStart: set weight=100.0 for ${SERVICE_NAME} ${POD_IP}:${SERVICE_PORT}" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=${NACOS_GROUP}&clusterName=${NACOS_CLUSTER}&weight=100.0" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') postStart: weight update failed" >> "$LOG" 2>&1

                    # 2) Done
                    echo "$(date +'%F %T') postStart: complete" >> "$LOG" 2>&1
                    exit 0

            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Load environment file
                    [ -f "${ENV_FILE}" ] && . "${ENV_FILE}"
                    LOG=/app/log/lifecycle.log

                    # 1) Set weight = 0
                    echo "$(date +'%F %T') preStop: set weight=0.0 for ${SERVICE_NAME} ${POD_IP}:${SERVICE_PORT}" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=${NACOS_GROUP}&clusterName=${NACOS_CLUSTER}&weight=0.0" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') preStop: weight update failed" >> "$LOG" 2>&1

                    # 2) Disable instance
                    echo "$(date +'%F %T') preStop: disable instance ${SERVICE_NAME} ${POD_IP}:${SERVICE_PORT}" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=${NACOS_GROUP}&clusterName=${NACOS_CLUSTER}&enabled=false" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') preStop: disable failed" >> "$LOG" 2>&1

                    # 3) Wait to drain
                    echo "$(date +'%F %T') preStop: sleeping 15s for drain" >> "$LOG" 2>&1
                    sleep 15 || true

                    # 4) Done
                    echo "$(date +'%F %T') preStop: complete" >> "$LOG" 2>&1
                    exit 0

      volumes:
        - name: app-log
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  selector:
    app: micro-go-login
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
  type: ClusterIP
