apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: micro-go-login
  template:
    metadata:
      labels:
        app: micro-go-login
    spec:
      terminationGracePeriodSeconds: 40  # 留 40s 给 preStop + 应用优雅退出
      containers:
        - name: micro-go-login
          image: registry.ap-southeast-1.aliyuncs.com/micro1/micro-login-test-gary:1.0.145
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            - name: ENV_FILE
              value: "/app/.env.production"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: "login-service"
            - name: SERVICE_PORT
              value: "8083"
            - name: NACOS_SERVER_IP
              value: "mse-95bb82810-nacos-ans.mse.aliyuncs.com"
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: NACOS_CONTEXT_PATH
              value: "/nacos"
            - name: NACOS_NAMESPACE
              value: "public"

          volumeMounts:
            - name: app-log
              mountPath: /app/log

          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    [ -f "${ENV_FILE}" ] && . "${ENV_FILE}"
                    LOG=/app/log/lifecycle.log
                    mkdir -p "$(dirname "${LOG}")" || true
                    echo "$(date +'%F %T') postStart: 注册 ${SERVICE_NAME} ${POD_IP}:${SERVICE_PORT}" >> "$LOG" 2>&1
                    curl -s -X POST \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=DEFAULT_GROUP&clusterName=DEFAULT&ephemeral=false" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') postStart: 注册失败" >> "$LOG" 2>&1
                    echo "$(date +'%F %T') postStart: 完成" >> "$LOG" 2>&1
                    exit 0

            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    [ -f "${ENV_FILE}" ] && . "${ENV_FILE}"
                    LOG=/app/log/lifecycle.log

                    echo "$(date +'%F %T') preStop: 标记不健康 ${SERVICE_NAME} ${POD_IP}:${SERVICE_PORT}" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v2/ns/health/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=DEFAULT_GROUP&clusterName=DEFAULT&healthy=false" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') preStop: 标记不健康失败" >> "$LOG" 2>&1

                    echo "$(date +'%F %T') preStop: 将权重设为 0" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=DEFAULT_GROUP&clusterName=DEFAULT&weight=0.0" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') preStop: 调整权重失败" >> "$LOG" 2>&1

                    echo "$(date +'%F %T') preStop: 删除NACOS实例" >> "$LOG" 2>&1
                    curl -s -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&namespaceId=${NACOS_NAMESPACE}&groupName=DEFAULT_GROUP&clusterName=DEFAULT&enabled=false" \
                      >> "$LOG" 2>&1 || echo "$(date +'%F %T') preStop: 禁用失败" >> "$LOG" 2>&1

                    echo "$(date +'%F %T') preStop: 完成" >> "$LOG" 2>&1
                    exit 0

      volumes:
        - name: app-log
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  selector:
    app: micro-go-login
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
  type: ClusterIP
