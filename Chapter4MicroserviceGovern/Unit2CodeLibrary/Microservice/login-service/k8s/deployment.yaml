apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: micro-go-login
  template:
    metadata:
      labels:
        app: micro-go-login
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: micro-go-login
          image: registry.ap-southeast-1.aliyuncs.com/micro1/micro-login-test-gary:1.0.145
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            - name: ENV_FILE
              value: "/app/.env.production"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: "micro-go-login"
            - name: SERVICE_PORT
              value: "8083"
          volumeMounts:
            - name: app-log
              mountPath: /app/log
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # 加载环境配置
                    . ${ENV_FILE} 2>/dev/null || true
                    LOG=/app/log/lifecycle.log
                    mkdir -p $(dirname $LOG) || true
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] postStart 注册开始 ${SERVICE_NAME}:${POD_IP}:${SERVICE_PORT}" >> $LOG 2>&1 || true
                    # POST 注册，失败不影响脚本返回
                    curl -sf -X POST \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}" \
                      >> $LOG 2>&1 || echo "️ postStart: 注册失败" >> $LOG 2>&1
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] postStart 完成" >> $LOG 2>&1 || true
                    exit 0

            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # 加载环境配置
                    . ${ENV_FILE} 2>/dev/null || true
                    LOG=/app/log/lifecycle.log
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] preStop 标记不健康 ${POD_IP}:${SERVICE_PORT}" >> $LOG 2>&1 || true
                    # 1. 标记不健康
                    curl -sf -X PUT \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}&healthy=false" \
                      >> $LOG 2>&1 || echo "️ preStop: 标记不健康失败" >> $LOG 2>&1

                    # 2. 等待排空
                    DRAIN=15
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] preStop 等待 ${DRAIN}s 排空流量" >> $LOG 2>&1 || true
                    sleep ${DRAIN} || true

                    # 3. 彻底下线
                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] preStop 删除注册 ${POD_IP}:${SERVICE_PORT}" >> $LOG 2>&1 || true
                    curl -sf -X DELETE \
                      "http://${NACOS_SERVER_IP}:${NACOS_SERVER_PORT}${NACOS_CONTEXT_PATH}/v1/ns/instance?serviceName=${SERVICE_NAME}&ip=${POD_IP}&port=${SERVICE_PORT}" \
                      >> $LOG 2>&1 || echo "️ preStop: 删除注册失败" >> $LOG 2>&1

                    echo "[$(date '+%Y-%m-%d %H:%M:%S')] preStop 完成" >> $LOG 2>&1 || true
                    exit 0

      volumes:
        - name: app-log
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: micro-go-login
  namespace: crolord
  labels:
    app: micro-go-login
spec:
  selector:
    app: micro-go-login
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
  type: ClusterIP